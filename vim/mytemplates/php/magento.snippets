priority -50

global !p
def snake(name):
	s1 = re.sub('(\w)([A-Z][a-z]+)', r'\1_\2', name)
	return re.sub('([a-z0-9])([A-Z])', r'\1_\2', s1).lower()

def part_name(text, part_no=-1):
	parts = text.split('/')
	return parts[part_no]

def first_lower(string):
	return string[:1].lower() + string[1:] if string else ''

def module_name(text):
	parts = text.split('/')
	return parts[-4] + '_' + parts[-3]

def module_key(text, depth=0):
	parts = text.split('/')

	company = parts[-(4+depth)]
	abbrev = re.sub(r'[^A-Z]', '', company).lower()

	if len(abbrev) > 1:
		company = abbrev

	return company + '_' + parts[-(3+depth)].lower()
endglobal

snippet _t_magento_class "Magento class" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1
{
	$0
}
endsnippet

snippet _t_magento_helper "Magento helper" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Model_Abstract
{
	$0
}
endsnippet

snippet _t_magento_model "Magento Model" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Model_Abstract
{
	protected function _construct()
	{
		$this->_init('${3:`!p snip.rv = module_key(path)`}/${4:`!p snip.rv = first_lower(snip.basename) `}');
	}$0
}
endsnippet

snippet _t_magento_resource "Magento Model Resource" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Model_Resource_Db_Abstract
{
	protected function _construct()
	{
		$this->_init('${3:`!p snip.rv = module_key(path, depth=1)`}/${4:`!p snip.rv = snake(snip.basename) `}', '${5:id}');
	}$0
}
endsnippet

snippet _t_magento_collection "Magento Model Collection" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Model_Resource_Db_Collection_Abstract
{
	protected function _construct()
	{
		$this->_init('${3:`!p snip.rv = module_key(path, depth=2)`}/${4:`!p snip.rv = first_lower(part_name(path, part_no=-2)) `}');
	}$0
}
endsnippet

snippet _t_magento_block "Magento block" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Block_Template
{
	protected $_template = '${3:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	parts = snake(m.group() + '/' + snip.basename).split('/block/')
	snip.rv = parts[0] + '/' + parts[1] + '.phtml'
`}';$0
}
endsnippet

snippet _t_magento_controller_front "Magento frontend controller" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	class_name = m.group().replace('/', '_')  + '_' + snip.basename
	snip.rv = class_name.replace('_controllers_', '_')
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Core_Controller_Front_Action
{
	public function indexAction()
	{$0
	}
}
endsnippet

snippet _t_magento_controller_back "Magento backend controller" b
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	class_name = m.group().replace('/', '_')  + '_' + snip.basename
	snip.rv = class_name.replace('_controllers_', '_')
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends Mage_Adminhtml_Controller_Action
{
	protected function _isAllowed()
	{
		return Mage::getSingleton('admin/session')->isAllowed('${2:`!p snip.rv = module_key(path)`}');
	}

	protected function _initAction()
	{
		$this->loadLayout()
			->_setActiveMenu('${3:`!p snip.rv = module_key(path)`}');

		return $this;
	}

	public function indexAction()
	{$0
	}
}
endsnippet

snippet _t_magento_controller_back_resource "Magento backend controller for resource" b
<?php

class Ukpos_PromoList_Adminhtml_PromotionController extends Mage_Adminhtml_Controller_Action
{
		protected function _isAllowed()
		{
				return Mage::getSingleton('admin/session')->isAllowed('admin/promo/promo_list');
		}


		protected function _initAction()
		{
				$this->loadLayout()
						->_setActiveMenu('promo/promo_list/promotion');

				return $this;
		}

		/**
		 * Displays the 'ukpos_promolist/adminhtml_promotion' block
		 * - this is a Mage_Adminhtml_Block_Widget_Grid_Container block
		 * - - this automatically adds the child grid block: [CONTAINERS-_blockGroup]/[CONTAINERS-_controller]_grid'
		 *     => ukpos_promolist/adminhtml_promotion_grid
		 */
		public function indexAction()
		{
				$this->_initAction()
						->_addContent($this->getLayout()->createBlock('ukpos_promolist/adminhtml_promotion'))
						->renderLayout();

		}

		/**
		 * Displays the 'ukpos_promolist/adminhtml_promotion_edit' block
		 * - this is a Mage_Adminhtml_Block_Widget_Form_Container block
		 * - - this automatically adds the child grid block: [CONTAINERS-_blockGroup]/[CONTAINERS-_controller]_[CONTAINERS-_mode]_form'
		 *     => ukpos_promolist/adminhtml_promotion_edit_form
		 */
		public function newAction()
		{
				//$template = $this->getRequest()->getParam('template', false);
				$template = 'boxes';
				if ($template) {
						try {
								if (!Mage::getModel('ukpos_promolist/template_' . $template)) {
										throw new Exception('ukpos_promolist/template_' . $template . ' does not exists.');
								};
								$model = Mage::getModel('ukpos_promolist/promotion');
								$model->setTemplate($template);
								Mage::register('current_ukpos_promolist_promotion', $model);
						} catch (Exception $e) {
								Mage::getSingleton('adminhtml/session')->addError($this->__('Template does not exist.'));
								Mage::log($e);
						}
				}
				$this->_initAction()
						->_addContent($this->getLayout()->createBlock('ukpos_promolist/adminhtml_promotion_edit'))
						->renderLayout();
		}

		/**
		 * Loads requested 'ukpos_promolist/promotion' model and stores in registry
		 *
		 * Displays the 'ukpos_promolist/adminhtml_promotion_edit' block
		 * - this is a Mage_Adminhtml_Block_Widget_Form_Container block
		 * - - this automatically adds the child grid block: [CONTAINERS-_blockGroup]/[CONTAINERS-_controller]_[CONTAINERS-_mode]_form'
		 *     => ukpos_promolist/adminhtml_promotion_edit_form
		 */
		public function editAction() {
				$model  = Mage::getModel('ukpos_promolist/promotion');
				$entityId = $this->getRequest()->getParam('id', null);

				if ($entityId) {
						$model->load($entityId);
						if (!$model->getId()) {
								$this->_getSession()->addError($this->__('This entity no longer exists'));
								return $this->_redirect('*/*');
						}
				}

				$data = Mage::getSingleton('adminhtml/session')->getFormData(true);
				if (!empty($data)) {
						$model->addData($data);
				}

				Mage::register('current_ukpos_promolist_promotion', $model);
				try {
						return $this->_initAction()
								->_addContent($this->getLayout()->createBlock('ukpos_promolist/adminhtml_promotion_edit'))
								->renderLayout();
				} catch (Exception $e) {
						Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
						Mage::log($e);
						return $this->_redirect('*/*');
				}
		}

		public function saveAction()
		{
				$redirectPath   = '*/*/';
				$redirectParams = array();

				$data = $this->getRequest()->getPost();
				if ($this->getRequest()->isPost() && $data) {
						$model          = Mage::getModel('ukpos_promolist/promotion');
						$redirectBack   = $this->getRequest()->getParam('back', false);
						$hasError       = false;

						$entityId = $this->getRequest()->getParam('id');
						try {
								if ($entityId) {
										$model->load($entityId);
										if ($entityId != $model->getId()) {
												Mage::throwException($this->__('Wrong promotion specified.'));
										}
								}
								if (empty($data['id'])) {
										unset($data['id']);
								}
								$model->setData($data);
								$model->save();

								$this->_getSession()->addSuccess(
										$this->__('The entity has been saved.')
								);

								if ($redirectBack) {
										$this->_redirect('*/*/edit', array(
												'id'       => $model->getId(),
												'_current' => true,
										));
										return;
								}
						} catch (Mage_Core_Exception $e) {
								$this->_getSession()->addError($e->getMessage());
								$hasError = true;
						} catch (Exception $e) {
								$this->_getSession()->addException($e,
										$this->__('An error occurred while saving the entity.')
								);
								Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
								Mage::getSingleton('adminhtml/session')->setPageData($data);
								$this->_redirect('*/*/edit', array('id' => $entityId));
								return;
						}

						if ($hasError) {
								$this->_getSession()->setFormData($data);
						}

						if ($hasError || $redirectBack) {
								$redirectPath = '*/*/edit';
								$redirectParams['id'] = $model->getId();
						}
				}
				$this->_redirect($redirectPath, $redirectParams);
		}

		public function deleteAction() {
				$model  = Mage::getModel('ukpos_promolist/promotion');
				$entityId = $this->getRequest()->getParam('id', null);
				try {
						if (!$entityId) {
								throw new Exception('Promotion id not provided.');
						}
						$model->load($entityId)->delete();

				} catch (Exception $e) {
						Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
						Mage::log($e);
				}
				return $this->_redirect('*/*');
		}

		public function previewAction() {
				$jsonString = json_decode($this->getRequest()->getParam('json', '{}'), true);
				$template = $this->getRequest()->getParam('template', false);
				$storeId = $this->getRequest()->getParam('store_id', 0);
				try {
						$templateObj = @Mage::getModel('ukpos_promolist/template_' . $template);
						if ($templateObj) {
								die($templateObj->setStoreId($storeId)->getPreviewHtml($jsonString));
						} else {
								throw new Exception('Template ' .$template . ' does not exists.');
						}
				} catch (Exception $e) {
						Mage::log($e);
						die($e->getMessage());
				}
		}

		public function fullPreviewAction() {
				$id = $this->getRequest()->getParam('id', false);
				$storeId = $this->getRequest()->getParam('storeId', false);
				$baseUrl = Mage::app()->getStore($storeId)->getConfig('web/unsecure/base_url');
				$url = "{$baseUrl}promo_list/preview/index/id/{$id}";
				$hash = Mage::helper('core')->getHash($url.now(true));
				$url .= "/h/$hash";
				$this->getResponse()->setRedirect($url);
		}

		public function cleanProductCacheAction() {
				$cacheTags = array("ukpos_promolist_promotion");
				Mage::app()->getCache()->clean('matchingTag', $cacheTags);
				Mage::getSingleton('adminhtml/session')->addSuccess('Landing page products cache has been cleaned');
				$this->_redirect('adminhtml/system_config/edit', array('section' => 'ukpos_promolist'));
		}
}
endsnippet
