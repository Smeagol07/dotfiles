priority -40

snippet _t_polybar_script "Polybar script template" b
#!/bin/env zsh
#=================================================
# name:   ${1:`!v expand('%:t')`}
# author: ${2:`!v g:snips_author`} <${3:`!v g:snips_author_url`}>
# date:   ${5:`date '+%d/%m/%Y'`}
#=================================================
cycle=0    #init cycle
tick=0.2   #tick every n secnds
refresh=30 #refresh every n seconds

${6:click_action}() {
}

${7:main_action}() {
}

trap "$6" USR1

$7

while true; do
	if [[ $cycle -ge $((refresh / tick)) ]]; then
		$7
		cycle=0
	fi
	cycle=$((cycle + 1))
	sleep ${tick}s
	wait
done
endsnippet


snippet _t_polybar_toggle_script "Polybar toggle script template" b
#!/bin/env zsh
#=================================================
# name:   ${1:`!v expand('%:t')`}
# author: ${2:`!v g:snips_author`} <${3:`!v g:snips_author_url`}>
# date:   ${5:`date '+%d/%m/%Y'`}
#=================================================
cycle=0    #init cycle
tick=0.2   #tick every n secnds
refresh=30 #refresh every n seconds

state="off"

switch_state() {
	update_state
	if [[ $state == "on" ]]; then
		# turn off action
		state="off"
	else
		# turn on action
		state="on"
	fi
	show_state
}

update_state() {
	state="off"
	# if [[ "$(check state action)" != "" ]]; then
		state="on"
	# fi
}

show_state() {
	if [[ $state == "on" ]]; then
		echo 
	else
		echo 
	fi
}

trap "switch_state" USR1

while true; do
	if [[ $cycle -ge $((refresh / tick)) ]]; then
		update_state
		show_state
		cycle=0
	fi
	cycle=$((cycle + 1))
	sleep ${tick}s
	wait
done
endsnippet
