priority -50

snippet ans "namespace declaration" b
namespace ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[a-zA-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '\\')
	# snip.rv = snip.rv.title()
	snip.rv = snip.rv[0].upper() + snip.rv[1:]
`};
endsnippet

snippet cn "Class name (file name actually)"
class ${1:`!p snip.rv=snip.basename`}
endsnippet

snippet aclass "Class declaration template" b
<?php

namespace ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[a-zA-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '\\')
	snip.rv = snip.rv[0].upper() + snip.rv[1:]
`};

/**
 * Class ${1:`!p snip.rv=snip.basename`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1
{
}
endsnippet

snippet tclass "Test class declaration"
<?php

/**
 * TestClass ${1:`!p snip.rv=snip.basename`}
 * @author ${2:`!v g:snips_author`}
 */
class $1 extends TestCase
{
}
endsnippet

snippet psy "Psy sh break point"
eval(\Psy\sh());
endsnippet

snippet rpsy "Psy sh break point (with require)"
require_once('psysh'); eval(\Psy\sh()); #make sure psysh is in your include path
endsnippet

snippet zd "Zend_Debug dump"
Zend_Debug::dump($1);
endsnippet

snippet zd "Zend_Debug dump"
Zend_Debug::dump($1);
endsnippet

snippet schcr "Laravel Schema::create"
Schema::create('${1:table_name}', function (Blueprint $table) {
	$table->${2:string('new_field');}$0
});
endsnippet

snippet schdr "Laravel Schema::drop"
Schema::drop('${1:table_name}');$0
endsnippet

snippet schtab "Laravel Schema::table"
Schema::table('${1:table_name}', function (Blueprint $table) {
	$table->${2:increments('id');}$0
});
endsnippet

snippet cl "PSR-1 Class"
<?php

/**
 * Class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
 *
 * @author ${2:`!v g:snips_author`}
 */
class $1
{$3
}
endsnippet

snippet cln "PSR-1 Class only"
class ${1:`!p
relpath = os.path.relpath(path)
m = re.search(r'[A-Z].+(?=/)', relpath)
if m:
	snip.rv = m.group().replace('/', '_')  + '_' + snip.basename
`}
endsnippet
